using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Game
{
    class Program
    {
        static void Main(string[] args)
        {
            // The code provided will print ‘Hello World’ to the console.
            // Press Ctrl+F5 (or go to Debug > Start Without Debugging) to run your app.
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("                                  WELCOME TO GAME OF LIFE");
            Console.WriteLine();
            Console.WriteLine();


            // Go to http://aka.ms/dotnet-get-started-console to continue learning how to build a console app! 


            int rows = 10, cols = 10, neighbour_count = 0, gen = 3, sum = 0;
            int[,] grid = new int[rows, cols];
            int[,] next = new int[rows, cols];
            int[,] temp = new int[rows, cols];


            for (int i = 0; i < rows; i++)
            {
                for (int j = 0; j < cols; j++)
                {
                    grid[i, j] = 0;
                }
            }

            grid[2, 1] = 1;
            grid[2, 2] = 1;
            grid[2, 3] = 1;

            grid[3, 1] = 1;
            grid[3, 2] = 1;
            grid[3, 3] = 1;

            grid[4, 1] = 1;
            grid[4, 2] = 1;
            grid[4, 3] = 1;

            temp = grid;

            for (int i = 0; i < rows; i++)
            {
                Console.Write("                             ");

                for (int j = 0; j < cols; j++)
                {
                    Console.Write("  " + grid[i, j]);
                }
                Console.WriteLine();
            }

            do
            {
                Console.WriteLine();
                Console.Write("                               Which generation's population positions are you interested:  ");
                gen = int.Parse(Console.ReadLine());
                Console.WriteLine();
                //Console.WriteLine("                               Output for the Generation : " + gen);
                Console.WriteLine();
                Console.Write("                               ");
                Console.Write("[");

                for (int z = 0; z < gen; z++)
                {
                    for (int i = 0; i < rows; i++)
                    {
                        // Console.Write("                                 ");
                        for (int j = 0; j < cols; j++)
                        {
                            neighbour_count = neighbour_cal(grid, i, j);

                            if (grid[i, j] == 0 && neighbour_count == 3)
                            {
                                next[i, j] = 1;
                            }
                            else if (grid[i, j] == 1 && (neighbour_count < 2 || neighbour_count > 3))
                            {
                                next[i, j] = 0;
                            }
                            else
                            {
                                next[i, j] = grid[i, j];
                            }

                            if (gen - 1 == z)
                            {
                                if (next[i, j] == 1)
                                    Console.Write("(" + i + "," + j + ")");
                            }
                            //Console.Write("  " + next[i, j]);
                        }
                        //Console.WriteLine();
                    }
                    grid = next;
                    //Console.WriteLine();
                }
                Console.Write("]");
                Console.WriteLine();
                Console.WriteLine();
                grid = temp;
                Console.Write("                               Do you want to see any other generation, Press YES :  "); 
            } while(Console.ReadLine().ToLower()=="yes");

            int neighbour_cal(int[,] grid1, int x,int y)
            {
                sum = 0;
                for (int i = -1; i < 2; i++)
                {
                    for (int j = -1; j < 2; j++)
                    {
                        sum += grid1[(i + x + rows)%rows, (j + y + cols)%cols];
                    }
                }

                sum -= grid1[x, y];
                return sum;
            }




            Console.ReadKey();
        }
    }
}
